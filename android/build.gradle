apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

ext.gdxVersion = '1.12.0'

android {
    namespace 'ca.grasley.spaceshooter'
    compileSdk 35

    defaultConfig {



        applicationId "ca.grasley.spaceshooter"
        minSdkVersion 23
        targetSdk 35
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

// ❗️Filtro de ABI para evitar cargar armeabi (obsoleto)
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

    }

    configurations {
        natives
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }

    packagingOptions {
        exclude 'META-INF/robovm/ios/robovm.xml'
        pickFirst 'META-INF/gradle/incremental.annotation.processors'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }


}

// ✅ Actualizada sin armeabi
task copyAndroidNatives {
    doFirst {
        file("libs/armeabi-v7a/").mkdirs()
        file("libs/arm64-v8a/").mkdirs()
        file("libs/x86_64/").mkdirs()
        file("libs/x86/").mkdirs()

        configurations.natives.files.each { jar ->
            def outputDir = null
            if (jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
            if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
            if (jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
            if (jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
            if (outputDir != null) {
                copy {
                    from zipTree(jar)
                    into outputDir
                    include "*.so"
                }
            }
        }
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.contains("package")) {
        task.dependsOn copyAndroidNatives
    }
}

task run(type: Exec) {
    def sdkDir = null
    def localProps = file("../local.properties")
    if (localProps.exists()) {
        Properties props = new Properties()
        localProps.withInputStream { props.load(it) }
        sdkDir = props.getProperty('sdk.dir')
    }
    sdkDir = sdkDir ?: System.env.ANDROID_HOME
    commandLine "$sdkDir/platform-tools/adb", 'shell', 'am', 'start', '-n', 'ca.grasley.spaceshooter/ca.grasley.spaceshooter.AndroidLauncher'
}

dependencies {
    // AndroidX + Material
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.activity:activity:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'

    // Firebase
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    implementation 'com.google.android.gms:play-services-base:18.7.0'
    implementation 'com.google.android.gms:play-services-tasks:18.3.0'
    implementation 'com.google.android.gms:play-services-basement:18.7.0'
    implementation platform('com.google.firebase:firebase-bom:33.13.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth:23.2.0'

    // libGDX core y backend Android
    implementation 'com.badlogicgames.gdx:gdx:1.12.0'
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"

    // libGDX natives (✅ sin armeabi)
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"

    // FreeType
    implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"

    // Módulo core
    implementation project(':core')

    // Java 8 desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.3'
}

eclipse.project.name = "Infinity_Blaster"
